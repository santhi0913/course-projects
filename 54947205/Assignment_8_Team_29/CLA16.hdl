//16-bit carry look ahead adder (used in Hack ALU)
CHIP CLA16{
IN x[16],y[16],as;
OUT s[16];
PARTS:

/*as : addition or subtraction*/
/*Xor4 : outputs 1's compliment of y[16] if as=1*/

Xor4(a0=y[0],a1=y[1],a2=y[2],a3=y[3],op=as,b0=Y0,b1=Y1,b2=Y2,b3=Y3);
Xor4(a0=y[4],a1=y[5],a2=y[6],a3=y[7],op=as,b0=Y4,b1=Y5,b2=Y6,b3=Y7);
Xor4(a0=y[8],a1=y[9],a2=y[10],a3=y[11],op=as,b0=Y8,b1=Y9,b2=Y10,b3=Y11);
Xor4(a0=y[12],a1=y[13],a2=y[14],a3=y[15],op=as,b0=Y12,b1=Y13,b2=Y14,b3=Y15);

/*CLA 4 bit adder*/
CLA(x0=x[0],x1=x[1],x2=x[2],x3=x[3],y0=Y0,y1=Y1,y2=Y2,y3=Y3,C0=as,s0=s[0],s1=s[1],s2=s[2],s3=s[3],C3=c3,C4=c4);
CLA(x0=x[4],x1=x[5],x2=x[6],x3=x[7],y0=Y4,y1=Y5,y2=Y6,y3=Y7,C0=c4,s0=s[4],s1=s[5],s2=s[6],s3=s[7],C3=c7,C4=c8);
CLA(x0=x[8],x1=x[9],x2=x[10],x3=x[11],y0=Y8,y1=Y9,y2=Y10,y3=Y11,C0=c8,s0=s[8],s1=s[9],s2=s[10],s3=s[11],C3=c11,C4=c12);
CLA(x0=x[12],x1=x[13],x2=x[14],x3=x[15],y0=Y12,y1=Y13,y2=Y14,y3=Y15,C0=c12,s0=s[12],s1=s[13],s2=s[14],s3=s[15],C3=c15,C4=c16);


}